<!DOCTYPE html>
<html>
<head>
    <title>WMPR Requests Settings</title>
    <meta name="decorator" content="atl.admin">
    <meta name="admin.active.section" content="atl.jira.proj.config">
    <meta name="admin.active.tab" content="wmpr-settings-menu">
    <meta name="projectkey" content="$projectKey">
    <meta charset="utf-8">
    
    #set($webResourceManager = $action.webResourceManager)
    $webResourceManager.requireResource("com.scriptrunnerhq.vendors-api.backend:wmpr-settings-resources")
    $webResourceManager.requireResource("com.atlassian.auiplugin:ajs")
    $webResourceManager.requireResource("com.atlassian.plugins.jquery:jquery")
</head>
<body>
    <div id="wmpr-settings-container" class="project-config-content">
        <header class="aui-page-header">
            <div class="aui-page-header-inner">
                <div class="aui-page-header-main">
                    <h1>WMPR Requests Settings</h1>
                    <p class="aui-page-header-description">
                        Configure the JQL query used to fetch WMPR requests for display in the Service Desk portal.
                    </p>
                </div>
            </div>
        </header>
        
        <!-- Loading state while React component initializes -->
        <div class="wmpr-loading-placeholder">
            <div style="text-align: center; padding: 40px;">
                <aui-spinner size="medium"></aui-spinner>
                <p>Initializing WMPR Settings...</p>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        (function() {
            // Set up proper context path for project admin
            var contextPath = '$req.contextPath';
            var projectKey = '$projectKey';
            
            // Set global context
            window.contextPath = contextPath || '';
            window.projectKey = projectKey || '';
            
            // Ensure AJS is available
            if (typeof AJS === 'undefined') {
                window.AJS = { 
                    contextPath: function() { 
                        return window.contextPath; 
                    } 
                };
            }
            
            console.log('WMPR Settings loaded for project:', window.projectKey);
            console.log('Context path:', window.contextPath);
            
            // Initialize WMPR Settings component
            function initializeWMPRSettings() {
                console.log('Initializing WMPR Settings in project admin context...');
                
                var container = document.getElementById('wmpr-settings-container');
                if (!container) {
                    console.log('Settings container not found, retrying...');
                    setTimeout(initializeWMPRSettings, 1000);
                    return;
                }
                
                if (typeof window.WMPRSettings !== 'undefined' && window.WMPRSettings.mount) {
                    console.log('Mounting WMPR Settings component');
                    window.WMPRSettings.mount();
                } else {
                    console.log('WMPRSettings not ready, retrying...');
                    setTimeout(initializeWMPRSettings, 1000);
                }
            }
            
            // Initialize when ready
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', initializeWMPRSettings);
            } else {
                setTimeout(initializeWMPRSettings, 100);
            }
            
            // AJS ready
            if (typeof AJS !== 'undefined' && AJS.toInit) {
                AJS.toInit(initializeWMPRSettings);
            }
            
        })();
    </script>
</body>
</html> 